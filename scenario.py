from link import Link
from intersection import Intersection
from car import Car
from entry import Entry
import numpy as np





class Scenario:




    def loadScenario(scenario_nr):
        scenarios = [


            #           DIRECTIONS
            #
            #               0
            #               ↑
            #          3 ←    → 1
            #               ↓
            #               2

            # ________________________________________________________________________________________________________
            #
            #                                                  [0]
            #                                       1D, 2 intersections, 2 cars
            # ________________________________________________________________________________________________________
            {
                'links': [Link(100, [-1, 0, -1, -1]), Link(50, [-1, 1, -1, 0]), Link(120, [-1, -1, -1, 1])],

                'intersections': [Intersection([-1, 1, -1, 0], [[0, 30], [30, 60], [0, 30], [30, 60]]),
                                Intersection([-1, 2, -1, 1], [[0, 30], [30, 60], [0, 30], [30, 60]])],

                'cars': [Car(0, 1, 6, 2), Car(2, 3, 12, 0)]
            },

            # ________________________________________________________________________________________________________
            #
            #                                                 [1]
            #                                       2D, 1 intersection, 2 cars
            # ________________________________________________________________________________________________________
            {
                'links': [Link(80, [0, -1, -1, -1]), Link(80, [-1, 0, -1, -1]), Link(80, [-1, -1, 0, -1]),
                        Link(80, [-1, -1, -1, 0])],
                'intersections': [Intersection([2, 3, 0, 1])],
                'cars': [],
                'entries': [Entry(0, 0, 360, [2]), Entry(2, 2, 360, [0]), Entry(1, 1, 300, [3]), Entry(3, 3, 300, [1])]

            },



            # ________________________________________________________________________________________________________
            #
            #                                                  [2]
            #                                       2D, 6 intersections, 9 cars
            # ________________________________________________________________________________________________________
            {
                'links':  [Link(40, [0, -1, 3, -1]),
                         Link(100, [-1, 0, -1, -1]),
                         Link(50, [-1, -1, 0, -1]),
                         Link(120, [-1, 1, -1, 0]),
                         Link(40, [1, -1, 4, -1]),
                         Link(30, [-1, -1, 1, -1]),
                         Link(70, [-1, 2, -1, 1]),
                         Link(40, [2, -1, 5, -1]),
                         Link(60, [-1, -1, 2, -1]),
                         Link(90, [-1, -1, 2, -1]),
                         Link(80, [3, -1, -1, -1]),
                         Link(100, [-1, 3, -1, -1]),
                         Link(120, [-1, 4, -1, 3]),
                         Link(80, [4, -1, -1, -1]),
                         Link(70, [-1, 5, -1, 4]),
                         Link(80, [5, -1, -1, -1]),
                         Link(90, [-1, -1, -1, 5])],


                'intersections':  [
                                    Intersection([2, 3, 0, 1]),
                                    Intersection([8, 9, 7, 6]),
                                    Intersection([0, 12, 10, 11]),
                                    Intersection([7, 16, 15, 14]),
                                    Intersection([4, 14, 13, 12]),
                                    Intersection([5, 6, 4, 3])
                                   ],

                'cars':[],

                'entries':[ Entry(1, 1, 300, [9]),
                            Entry(2, 2, 150, [10]),
                            Entry(5, 2, 90, [13]),
                            Entry(8, 2, 180, [15]),
                            Entry(16, 3, 100, [11]),
                            Entry(15, 0, 400, [8]),
                            Entry(13, 0, 200, [5]),
                            Entry(10, 0, 150, [2]),
                            Entry(11, 1, 240, [16])
                        ]

            },


            # ________________________________________________________________________________________________________
            #
            #                                              [3]
            #          1D, 2 intersections, 2 cars, moving in same direction, test cars reacting to cars
            # ________________________________________________________________________________________________________
            {
                'links': [Link(100, [-1, 0, -1, -1]), Link(50, [-1, 1, -1, 0]), Link(120, [-1, -1, -1, 1])],

                'intersections': [Intersection([-1, 1, -1, 0], [[0, 30], [30, 60], [0, 30], [30, 60]]),
                                  Intersection([-1, 2, -1, 1], [[0, 30], [30, 60], [0, 30], [30, 60]])],

                'cars': [Car(0, 1, 6, 2), Car(0, 1, 5, 2, distanceInLink=20)]
            },

            # ________________________________________________________________________________________________________
            #
            #                                              [4]
            #                            1D, 1 intersection, cars in vehicles/h
            # ________________________________________________________________________________________________________
            {
                'links': [Link(100, [-1, 0, -1, -1]), Link(50, [-1, 1, -1, 0])],

                'intersections': [Intersection([-1, 1, -1, 0], [[0, 30], [30, 60], [0, 30], [30, 60]])],

                'cars': [Car(0, 1, 6, 2), Car(0, 1, 5, 2, distanceInLink=20)],

                'inputs': []
            },

            # ________________________________________________________________________________________________________
            #
            #                                                 [5]
            #                                         2D, 2 intersections
            # ________________________________________________________________________________________________________
            {
                'links': [Link(50, [0, -1, -1, -1]), Link(50, [-1, 0, -1, -1]), Link(50, [-1, -1, 0, -1]),
                          Link(50, [-1, 1, -1, 0]),
                          Link(50, [-1, -1, -1, 1]),Link(50, [-1, -1, -1, 1]),Link(50, [1, -1, -1, -1])],
                'intersections': [Intersection([2, 3, 0, 1]), Intersection([4,5,6,3])],
                'cars': [],
                'entries': [Entry(0, 0, 360, [2]), Entry(2, 2, 360, [0]), Entry(1, 1, 300, [3]), Entry(5, 3, 300, [1]),
                            Entry(6, 0, 360, [4])]

            },

            # ________________________________________________________________________________________________________
            #
            #                                                 [6]
            #                                      Scenario: Webster Case No 5
            # ________________________________________________________________________________________________________
            {
                'links': [Link(80, [0, -1, -1, -1]), Link(80, [-1, 0, -1, -1]), Link(80, [-1, -1, 0, -1]),
                          Link(80, [-1, -1, -1, 0])],
                'intersections': [Intersection([2, 3, 0, 1])],
                'cars': [],
                'entries': [Entry(0, 0, 600, [2]), Entry(2, 2, 600, [0]), Entry(1, 1, 300, [3]), Entry(3, 3, 300, [1])]

            },

            # ________________________________________________________________________________________________________
            #
            #                                                 [7]
            #                                         Scenario: Logic Test
            # ________________________________________________________________________________________________________
            {
                'links': [Link(100, [0, -1, -1, -1]), Link(100, [-1, 0, -1, -1]), Link(100, [-1, -1, 0, -1]),
                          Link(140, [-1, 1, -1, 0]),
                          Link(100, [-1, -1, 1, -1]), Link(100, [-1, -1, -1, 1]), Link(100, [1, -1, -1, -1])],
                'intersections': [Intersection([2, 3, 0, 1]), Intersection([4, 5, 6, 3])],
                'cars': [],
                'entries': [Entry(0, 0, 150, [2]), Entry(2, 2, 150, [0]), Entry(1, 1, 600, [3]), Entry(5, 3, 150, [1]),
                            Entry(6, 0, 150, [4]), Entry(4, 2, 150, [6]) ]

            },

            # ________________________________________________________________________________________________________
            #
            #                                                  [2]
            #                                       2D, 6 intersections, 9 cars
            # ________________________________________________________________________________________________________
            {
                'links': [Link(40, [0, -1, 3, -1]),
                          Link(100, [-1, 0, -1, -1]),
                          Link(50, [-1, -1, 0, -1]),
                          Link(120, [-1, 1, -1, 0]),
                          Link(40, [1, -1, 4, -1]),
                          Link(30, [-1, -1, 1, -1]),
                          Link(70, [-1, 2, -1, 1]),
                          Link(40, [2, -1, 5, -1]),
                          Link(60, [-1, -1, 2, -1]),
                          Link(90, [-1, -1, 2, -1]),
                          Link(80, [3, -1, -1, -1]),
                          Link(100, [-1, 3, -1, -1]),
                          Link(120, [-1, 4, -1, 3]),
                          Link(80, [4, -1, -1, -1]),
                          Link(70, [-1, 5, -1, 4]),
                          Link(80, [5, -1, -1, -1]),
                          Link(90, [-1, -1, -1, 5])],

                'intersections': [
                    Intersection([2, 3, 0, 1]),
                    Intersection([8, 9, 7, 6]),
                    Intersection([0, 12, 10, 11]),
                    Intersection([7, 16, 15, 14]),
                    Intersection([4, 14, 13, 12]),
                    Intersection([5, 6, 4, 3])
                ],

                'cars': [],

                'entries': [Entry(1, 1, 300, [9]),
                            Entry(2, 2, 150, [10]),
                            Entry(5, 2, 90, [13]),
                            Entry(8, 2, 180, [15]),
                            Entry(16, 3, 100, [11]),
                            Entry(15, 0, 400, [8]),
                            Entry(13, 0, 200, [5]),
                            Entry(10, 0, 150, [2]),
                            Entry(11, 1, 240, [16])
                            ]

            }


        ]





























        return scenarios[scenario_nr]